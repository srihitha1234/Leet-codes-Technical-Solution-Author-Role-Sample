Question:

Given an integer x, return true if x is a 
palindrome, and false otherwise.

Solution:

Intuition:
To find the reverse of a number and compare it with the original number, start by initializing the reverse as 0. Take the original number, let's say 121, and extract the ones digit (1). 
Add this digit to the reverse (0 + 1 = 1). Move the ones digit one place further, making the reverse 10, and add the tens digit of the original number (2) to the ones digit of the reverse (10 + 2 = 12). 
Again, move the ones digit one place further, making the reverse 120, and add the hundreds digit of the original number (1) to the ones digit of the reverse (120 + 1 = 121).
Now, you have the reverse of the original number, which is 121. Compare this with the original number (121), and since they are the same, you can conclude that 121 is a palindrome.
In general terms, for any given number, this process involves iteratively adding the digits from the least significant to the most significant, 
updating the reverse, and comparing the final reverse with the original number to determine if it is a palindrome.

Approach:
Initialization: Start by initializing two variables: one to store the reversed number and another as a temporary variable to hold the original number.
Reversing Digits: Use a loop to iterate through the digits of the original number. In each iteration, extract the last digit of the original number, update the reversed number, and move to the next digit.
Palindrome Check: After reversing the digits, compare the reversed number with the original number to determine if they are the same. If they are equal, the original number is a palindrome.

Complexity:
Time complexity:
O(log(n))
Space complexity:
O(1)

Code:

class Solution {
public:
    bool isPalindrome(int x) {
        long int reverse=0,temp=x;
        while(temp>0)
        {
            int rem=temp%10;
            reverse=reverse*10+rem;
            temp=temp/10;
        }
        if(x==reverse)
            return true;
        else
            return false;
    }
};
